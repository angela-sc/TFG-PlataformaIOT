@page "/admin"

@using PortalWebLogin.ViewModel
@using BlazorDownloadFile
@inherits AdministrarProyectosViewModel

@inject NavigationManager navmanager
@inject IBlazorDownloadFileService BlazorDownloadFileService
@*<h3>Página de administración de proyectos</h3>*@

@if (proyectos == null)
{
    <p><em>Cargando ...</em></p>
}
else
{
    @*<div class="row" style="border-bottom: 1px solid #eee;">
            <div class="col-md-5"><h1>PROYECTOS DISPONIBLES</h1></div>
            <div class="col-lg-2 col-md-3 ml-auto mt-1">
                <button class="btn btn-primary" @onclick="@(async () => await Crear())" style="float:right;"><span class="oi oi-plus mr-2"></span>Crear proyecto</button>
            </div>
            <div class="col-lg-2 col-md-3 mt-1">
                <button class="btn btn-info" @onclick="@(async () => await GenerarClaves())" style="float:right;"><span class="oi oi-lock-locked mr-2"></span>Generar claves</button>
            </div>
        </div>*@

    <div class="row" style="border-bottom: 1px solid #eee;">
        <div class="col-xl-6 xol-md-6 col-sm-12"><h2>PROYECTOS DISPONIBLES</h2></div>
        <div class="col-lg-3 col-md-3 ml-auto mt-1">
            <button class="btn btn-primary" @onclick="@(async () => await Crear())" style="float:right;"><span class="oi oi-plus mr-2"></span>Crear proyecto</button>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3 mt-1">
            <button class="btn btn-info" @onclick="@(async () => await GenerarClaves())" style="float:right;"><span class="oi oi-lock-locked mr-2"></span>Generar claves RSA</button>
        </div>
    </div>


    @*<div class="row" style="margin-bottom: 15px; padding-bottom: 5px; border-bottom: 1px solid #eee;">
            <div class="col-lg-6">
                <h1 id="titulo-admin">PROYECTOS DISPONIBLES</h1>
            </div>
            <div class="col-lg-3">
                <button class="btn btn-primary" @onclick="@(async () => await Crear())" style="float:right;"><span class="oi oi-plus mr-2"></span>Crear proyecto</button>
            </div>

            <div class="col-lg-3">
                <button class="btn btn-info" @onclick="@(async () => await GenerarClaves())" style="float:right;"><span class="oi oi-lock-locked mr-2"></span>Generar claves</button>
            </div>
        </div>*@
    @*<div class="row" style="margin-top: 15px; margin-bottom: 15px;">
            <div class="col-lg-12">
                <button class="btn btn-primary" @onclick="@(async () => await Crear())" style="float:right;"><span class="oi oi-plus mr-2"></span>Crear proyecto</button>
            </div>
        </div>*@

    @*<h5> Proyectos disponibles</h5>*@
    <div class="row mt-4">
        <!-- bucle que muestra los proyectos -->
        @foreach (var proyecto in proyectos)
        {
            var estacionesProyecto = estaciones.Where(eb => eb.FK_IdProyecto == proyecto.Id);

            @*<div class="col-xl-4 col-md-6 mb-4 mr-4">
                    <div class="card shadow">
                        <div class="card-header">@proyecto.Nombre</div>
                        <div class="card-body"><p class="card-text">@proyecto.Descripcion</p></div>
                    </div>
                </div>*@

            <div class="card shadow mb-3 mr-3" style="width:22rem;">
                <div class="card-header" style="background-color: rgba(0,0,0,.03); font-weight:bold;">
                    @proyecto.Nombre
                    <div style="cursor:pointer; float:right;">
                        <span class="oi oi-pencil" style="color:green; padding-left:4px;" @onclick="@(() => ActivarEditar(proyecto))"></span>
                        <span class="oi oi-x" style="color:red; padding-left:4px;" @onclick="@(async () => await ActivarEliminar(EntidadTratada.PROYECTO, proyecto.Id))"></span>
                    </div>
                </div>

                <div class="card-body text-dark">
                    <p class="card-text">@proyecto.Descripcion</p>
                    <p class="card-text mr-2" style="text-decoration:underline;">Elementos del proyecto:</p>

                    @if (estacionesProyecto != null)
                    {
                        foreach (var estacion in estacionesProyecto)
                        {
                            var sensoresEstacion = sensores.Where(se => se.fk_idestacionbase == estacion.Id);

                            <ul class="list-unstyled">
                                <li>
                                    @estacion.Nombre
                                    <div style="cursor:pointer; float:right; ">
                                        <span class="oi oi-plus" style="color:dodgerblue; padding-left:4px;" @onclick="@(() => CrearSE(estacion.Id))"></span>
                                        <span class="oi oi-pencil" style="color:green; padding-left:4px;" @onclick="@(() => ActivarEditar(estacion))"></span>
                                        <span class="oi oi-x" style="color:red; padding-left:4px;" @onclick="@(async () => await ActivarEliminar(EntidadTratada.ESTACIONBASE, estacion.Id))"></span>
                                    </div>
                                </li>

                                @if (sensoresEstacion != null)
                                {
                                    <ul>
                                        @foreach (var sensor in sensoresEstacion)
                                        {
                                            <li>
                                                @sensor.NombreSensor
                                                <div style="cursor:pointer; float:right;">
                                                    <span class="oi oi-pencil" style="color:green; padding-left:4px;" @onclick="@(() => ActivarEditar(sensor))"></span>
                                                    <span class="oi oi-x" style="color:red; padding-left:4px;" @onclick="@(async () => await ActivarEliminar(EntidadTratada.SENSOR, sensor.IdSensor))"></span>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                }
                            </ul>
                            @*<button class="btn" @onclick="@(async () => await CrearSE(estacion.Id))"><span class="oi oi-plus"></span> Añadir <strong>sensor a la estación base</strong></button>*@
                        }
                    }
                    <div style="color:dodgerblue; float:left; padding-top:10px; cursor:pointer">
                        <a class="btn" @onclick="@(async () => await CrearEB(proyecto.Id))"><span class="oi oi-plus"></span> Añadir <strong>estación base</strong></a><br />

                    </div>
                </div>
            </div>
        }
    </div>

    <!-- si se hace clic en 'crear proyecto' se abre el modal -->
    @if (crear)
    {
        <div class="modal" tabindex="99" style="display: block; margin-top: 5%;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <h4 class="modal-title"> Añadir Proyecto</h4>
                        <button type="button" class="close" @onclick="@(async () => await Close())"><span aria-hidden="true">X</span></button>
                    </div>

                    <div class="modal-body">
                        @if (!creado)
                        {
                            <EditForm Model="Proyecto" OnSubmit="@(async () => await CrearProyecto())">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="form-group">
                                    <div style="margin-bottom: 5px">
                                        <label for="nombre">Nombre</label>
                                        <InputText class="form-control" id="name" @bind-Value="Proyecto.Nombre"></InputText>
                                        <ValidationMessage For="@(()=> Proyecto.Nombre)" />
                                    </div>

                                    <div style="margin-bottom: 5px">
                                        <label for="descripcion">Descripción</label>
                                        <InputTextArea class="form-control" id="descripcion" @bind-Value="Proyecto.Descripcion"></InputTextArea>
                                        <ValidationMessage For="@(()=> Proyecto.Descripcion)" />
                                    </div>

                                </div>
                                <button class="btn btn-primary" type="submit">Aceptar</button>
                            </EditForm>
                        }
                        else
                        {
                            if (proyecto_creado)
                            {
                                <div class="alert alert-success" role="alert"><strong>¡PROYECTO CREADO!</strong></div>

                            }
                            else
                            {
                                <div class="alert alert-danger" role="alert"><strong><span class="oi oi-warning"></span>ERROR: </strong> NO SE HA PODIDO CREAR EL PROYECTO. Es posible que ya exista otro proyecto con el mismo nombre en la base de datos.</div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    if (crear_estacionbase)
    {
        <div class="modal" tabindex="99" style="display: block; margin-top: 5%;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Añade una estación base al proyecto</h4>
                        <button type="button" class="close" @onclick="@(async () => await Close())"><span aria-hidden="true">X</span></button>
                    </div>

                    <div class="modal-body">
                        @if (!creado)
                        {
                            <EditForm Model="EstacionBase" OnSubmit="@(async () => await CrearEstacionBase())">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <div style="margin-bottom: 5px">
                                        <label for="nombre">Nombre</label>
                                        <InputText class="form-control" id="name" @bind-Value="EstacionBase.Nombre"></InputText>
                                        <ValidationMessage For="@(()=> EstacionBase.Nombre)" />
                                    </div>
                                </div>
                                <button class="btn btn-primary" type="submit">Aceptar</button>
                            </EditForm>
                        }
                        else
                        {
                            <div class="alert alert-success" role="alert"><strong>¡Estacion creada!</strong></div>
                        }

                    </div>
                </div>
            </div>
        </div>
    }

    if (crear_sensor)
    {
        <div class="modal" tabindex="99" style="display: block; margin-top: 5%;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Añade un nuevo sensor</h4>
                        <button type="button" class="close" @onclick="@(async () => await Close())"><span aria-hidden="true">X</span></button>
                    </div>

                    <div class="modal-body">
                        @if (!creado)
                        {
                            <EditForm Model="Sensor" OnSubmit="@(async () => await CrearSensor())">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <div style="margin-bottom: 5px">
                                        <label for="nombre">Nombre</label>
                                        <InputText class="form-control" id="name" @bind-Value="Sensor.Nombre"></InputText>
                                        <ValidationMessage For="@(()=> Sensor.Nombre)" />
                                    </div>
                                    <div style="margin-bottom: 5px">
                                        <label for="latitud">Latitud</label>
                                        <InputNumber type="double" class="form-control" id="latitud" @bind-Value="Sensor.Latitud"></InputNumber>
                                        <ValidationMessage For="@(()=> Sensor.Latitud)" />
                                    </div>
                                    <div style="margin-bottom: 5px">
                                        <label for="longigut">Longitud</label>
                                        <InputNumber class="form-control" id="longitud" @bind-Value="Sensor.Longitud"></InputNumber>
                                        <ValidationMessage For="@(()=> Sensor.Longitud)" />
                                    </div>

                                </div>
                                <button class="btn btn-primary" type="submit">Aceptar</button>
                            </EditForm>
                        }
                        else
                        {
                            <div class="alert alert-success" role="alert"><strong>¡Sensor creado!</strong></div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    @if (eliminar)
    {
        <div class="modal" tabindex="99" style="display: block; margin-top: 5%;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">@encabezadoEliminar</h4>
                        <button type="button" class="close" @onclick="@(async () => await Close())"><span aria-hidden="true">X</span></button>
                    </div>
                    @if (!eliminado)
                    {
                        <div class="modal-body"> @preguntaEliminar </div>
                        <div class="modal-footer">
                            <button class="btn btn-primary" @onclick="@(async () => await Eliminar())">Aceptar</button>
                        </div>
                    }
                    else
                    {
                        @*<div class="modal-body @claseModal" role="alert" style="text-align:center;">@mensajeEliminar</div>*@

                        <div class=@claseModal role="alert" style="text-align:center;"><strong>@mensajeEliminar</strong></div>
                    }
                </div>
            </div>
        </div>
    }

    @if (ProyectoEditar != null)
    {
        <div class="modal" tabindex="99" style="display: block; margin-top: 5%;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Editar proyecto</h4>
                        <button type="button" class="close" @onclick="@(async () => await Close())"><span aria-hidden="true">X</span></button>
                    </div>
                    <div class="modal-body">
                        @if (!editado)
                        {
                            <EditForm Model="ProyectoEditar" OnSubmit="@(async () => await EditarProyecto())">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="form-group">
                                    <div style="margin-bottom: 5px">
                                        <label for="nombre">Nombre</label>
                                        <InputText class="form-control" id="nombre" @bind-Value="ProyectoEditar.Nombre"></InputText>
                                        <ValidationMessage For="@(()=> ProyectoEditar.Nombre)" />
                                    </div>
                                    <div style="margin-bottom: 5px">
                                        <label for="descripcion">Descripción</label>
                                        <InputTextArea class="form-control" id="descripcion" @bind-Value="ProyectoEditar.Descripcion"></InputTextArea>
                                        <ValidationMessage For="@(()=> ProyectoEditar.Descripcion)" />
                                    </div>
                                </div>
                                <button class="btn btn-primary" type="submit">Aceptar</button>
                            </EditForm>
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert" style="text-align:center;"><strong> @mensajeEditar</strong></div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }


    @if (EstacionBaseEditar != null)
    {
        <div class="modal" tabindex="99" style="display: block; margin-top: 5%;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Editar estación base</h4>
                        <button type="button" class="close" @onclick="@(async () => await Close())"><span aria-hidden="true">X</span></button>
                    </div>
                    <div class="modal-body">
                        @if (!editado)
                        {
                            <EditForm Model="EstacionBaseEditar" OnSubmit="@(async () => await EditarEstacionBase())">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="form-group">
                                    <div style="margin-bottom: 5px">
                                        <label for="nombre">Nombre</label>
                                        <InputText class="form-control" id="nombre" @bind-Value="EstacionBaseEditar.Nombre"></InputText>
                                        <ValidationMessage For="@(()=> EstacionBaseEditar.Nombre)" />
                                    </div>



                                </div>
                                <button class="btn btn-primary" type="submit">Aceptar</button>
                            </EditForm>
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert" style="text-align:center;"><strong> @mensajeEditar</strong></div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    @if (SensorEditar != null)
    {
        <div class="modal" tabindex="99" style="display: block; margin-top: 5%;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Editar sensor</h4>
                        <button type="button" class="close" @onclick="@(async () => await Close())"><span aria-hidden="true">X</span></button>
                    </div>
                    <div class="modal-body">
                        @if (!editado)
                        {
                            <EditForm Model="SensorEditar" OnSubmit="@(async () => await EditarSensor())">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="form-group">
                                    <div style="margin-bottom: 5px">
                                        <label for="editar-nombre-sensor">Nombre</label>
                                        <InputText class="form-control" id="editar-nombre-sensor" @bind-Value="SensorEditar.Nombre"></InputText>
                                        <ValidationMessage For="@(()=> SensorEditar.Nombre)" />
                                    </div>
                                    <div style="margin-bottom: 5px">
                                        <label for="latitud">Latitud</label>
                                        <InputNumber type="double" class="form-control" id="editar-latitud" @bind-Value="SensorEditar.Latitud"></InputNumber>
                                        <ValidationMessage For="@(()=> SensorEditar.Latitud)" />
                                    </div>
                                    <div style="margin-bottom: 5px">
                                        <label for="longigut">Longitud</label>
                                        <InputNumber class="form-control" id="editar-longitud" @bind-Value="SensorEditar.Longitud"></InputNumber>
                                        <ValidationMessage For="@(()=> SensorEditar.Longitud)" />
                                    </div>
                                </div>
                                <button class="btn btn-primary" type="submit">Aceptar</button>
                            </EditForm>
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert" style="text-align:center;"><strong> @mensajeEditar</strong></div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}


